{
    "sourceFile": "Grupo-1-Hackathon/server/services/employee.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1738215343511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1738215343511,
            "name": "Commit-0",
            "content": "import {\n  ChangeEmployee,\n  FindEmployeeByCredentials,\n  FindEmployeeById,\n  FindEmployeeByNr,\n  InsertEmployee,\n  RemoveEmployee,\n} from \"../data/employee\";\nimport { Credentials, Employee, EmployeeWithId } from \"../models/employee\";\n\nexport async function ReadEmployeeCredentials(\n  body: Credentials\n): Promise<string> {\n  const employee = await FindEmployeeByCredentials(body);\n  if (!employee) {\n    return \"login failed\";\n  }\n\n  return employee._id;\n}\n\nexport async function ReadEmployeeByNr(\n  employeeNr: number\n): Promise<EmployeeWithId | null> {\n  const employee = await FindEmployeeByNr(employeeNr);\n\n  return employee;\n}\n\nexport async function ReadEmployeeById(\n  id: string\n): Promise<EmployeeWithId | null> {\n  const employee = await FindEmployeeById(id);\n\n  return employee;\n}\n\nexport async function CreateEmployee(body: Employee): Promise<string> {\n  const res = await FindEmployeeByNr(body.employeeNr);\n  if (!res) {\n    const id = await InsertEmployee(body);\n    return id;\n  }\n  return \"1\";\n}\n\nexport async function UpdateEmployee(\n  nr: number,\n  body: Employee\n): Promise<void> {\n  await ChangeEmployee(nr, body);\n}\n\nexport async function DeleteEmployee(nr: number): Promise<void> {\n  await RemoveEmployee(nr);\n}\n"
        }
    ]
}
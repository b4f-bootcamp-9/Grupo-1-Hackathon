{
    "sourceFile": "Grupo-1-Hackathon/server/data/resource.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1738169565913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1738169565913,
            "name": "Commit-0",
            "content": "import {\n  Resource,\n  ResourceDeduction,\n  ResourceWithId,\n} from \"../models/resource\";\nimport { getMongoCollection } from \"./mongodb\";\nimport { ObjectId } from \"mongodb\";\n\nconst col = \"resources\";\nconst db = \"wildscape\";\n\nexport async function InsertResource(obj: Resource): Promise<string> {\n  const collection = await getMongoCollection(db, col);\n  const result = await collection.insertOne(obj);\n  return result.insertedId;\n}\n\nexport async function FindResources(): Promise<ResourceWithId[]> {\n  const collection = await getMongoCollection(db, col);\n  const result = await collection.find({}).toArray();\n\n  return result;\n}\n\nexport async function FindResourceByName(\n  resourceName: string\n): Promise<ResourceWithId[]> {\n  const collection = await getMongoCollection(db, col);\n  const result = await collection.findOne({ name: resourceName });\n\n  return result;\n}\n\nexport async function FindResourceByNameSearch(\n  str: string\n): Promise<ResourceWithId[] | null> {\n  const collection = await getMongoCollection(db, col);\n  const result = await collection\n    .find({ name: { $regex: str, $options: \"i\" } })\n    .toArray();\n  return result;\n}\n\nexport async function RemoveResource(id: string): Promise<void> {\n  const newId = new ObjectId(id);\n  const collection = await getMongoCollection(db, col);\n  await collection.deleteOne({ _id: newId });\n}\n\nexport async function ChangeResource(obj: ResourceDeduction) {\n  const newId = new ObjectId(obj._id);\n  console.log(obj.quantity);\n  const collection = await getMongoCollection(db, col);\n  await collection.updateOne(\n    { _id: newId },\n    { $inc: { quantity: -obj.quantity } }\n  );\n  return;\n}\n"
        }
    ]
}